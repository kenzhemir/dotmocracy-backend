"use strict";var precacheConfig=[["/index.html","a6882cfe151422a8d45426645a6e7ae5"],["/static/css/main.65c78c2f.css","815676e6b6badd5fd3bf828606200682"],["/static/js/main.3ba8e8bf.js","a68ec9396f2395476e60a5882cf08403"],["/static/media/404.f7195076.svg","f7195076681b21c98952d0c4e6f5a1a7"],["/static/media/Roboto-Light.e22062b3.ttf","e22062b3188c8199283ef2aa835d4653"],["/static/media/Roboto-Medium.99fc0816.ttf","99fc0816a09395454061301fefa42bf1"],["/static/media/Roboto-Regular.54a91b06.ttf","54a91b0619ccf9373d525109268219dc"],["/static/media/Ubuntu-L.2759de5c.ttf","2759de5c01527bd9730b4d1838e6c938"],["/static/media/Ubuntu-M.2aaaafd5.ttf","2aaaafd5fe853746266cad7eafcc871e"],["/static/media/Ubuntu-R.7f0b42d1.ttf","7f0b42d1d6a4d3e646c558185f6711ea"],["/static/media/avatar_placeholder.8c7154f1.svg","8c7154f19985edce0ee25729f0784864"],["/static/media/banner.b785f274.svg","b785f274da759879f18b896efbb7d6e9"],["/static/media/burger.6a0a9cf7.svg","6a0a9cf786d55e73d97312e497009557"],["/static/media/delete-button.0058d2b0.svg","0058d2b0612cd1bb7e4514f240cd20db"],["/static/media/ic_add_board.ec7a7aa4.svg","ec7a7aa4a78e98322903b31b5b7dcd3f"],["/static/media/ic_dashboard.ff6a1413.svg","ff6a1413efb39b241b15d0f6d80f3643"],["/static/media/ic_logout.b954ebf8.svg","b954ebf8effcfbd43c0e6c5b93f010a9"],["/static/media/ic_people.a48a457a.svg","a48a457a1a7bcaef88629923481fbbb8"],["/static/media/ic_settings.d8082312.svg","d8082312ac1a13f3b5f2158d90ffff31"],["/static/media/penguin.6fc14395.png","6fc14395108a3f121cfee51b4e4c3e51"],["/static/media/plus-button.cd42c9b6.svg","cd42c9b6b13cf075a63755df2c2ec615"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,n){var r=new URL(e);return n&&r.pathname.match(n)||(r.search+=(r.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),r.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),r=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),r]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var n=new Request(a,{credentials:"same-origin"});return fetch(n).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching),n="index.html";(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),t=urlsToCacheKeys.has(a));var r="/index.html";!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL(r,self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});